# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from core.environment.host import get_host_for_selenium_testing
from core.selenium.common import initialize_driver


class TestTestauthor():
  def setup_method(self, method):
    self.driver = initialize_driver()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_testauthor(self):
    self.driver.get(get_host_for_selenium_testing())
    self.driver.maximize_window()
    time.sleep(2)
    self.driver.find_element(By.CSS_SELECTOR, ".sidebar-item:nth-child(3) .align-middle:nth-child(2)").click()
    time.sleep(2)
    self.driver.find_element(By.CSS_SELECTOR, "#authors > option:nth-child(2)").click()
    time.sleep(2)
    self.driver.get_screenshot_as_png()
    time.sleep(7)
    self.driver.find_element(By.LINK_TEXT, "Sample dataset 1").click()
    self.driver.find_element(By.ID, "search").click()
    dropdown = self.driver.find_element(By.ID, "authors")
    time.sleep(2)
    dropdown.find_element(By.XPATH, "//option[. = 'Author 7']").click()
    time.sleep(2)
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.LINK_TEXT, "Sample dataset 1").click()
    self.driver.find_element(By.ID, "search").click()
    dropdown = self.driver.find_element(By.ID, "authors")
    time.sleep(1)
    dropdown.find_element(By.XPATH, "//option[. = 'Author 2']").click()
    time.sleep(1)
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.LINK_TEXT, "Sample dataset 2").click()
    self.driver.find_element(By.ID, "search").click()
    dropdown = self.driver.find_element(By.ID, "authors")
    time.sleep(1)
    dropdown.find_element(By.XPATH, "//option[. = 'Author 8']").click()
    time.sleep(1)
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.LINK_TEXT, "Sample dataset 2").click()
    self.driver.find_element(By.ID, "search").click()
    dropdown = self.driver.find_element(By.ID, "authors")
    time.sleep(1)
    dropdown.find_element(By.XPATH, "//option[. = 'Author 3']").click()
    time.sleep(1)
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.LINK_TEXT, "Sample dataset 3").click()
    self.driver.find_element(By.ID, "search").click()
    dropdown = self.driver.find_element(By.ID, "authors")
    time.sleep(1)
    dropdown.find_element(By.XPATH, "//option[. = 'Author 4']").click()
    time.sleep(1)
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.execute_script("window.scrollTo(0, document.body.scrollHeight / 4)")

    time.sleep(1)
    self.driver.find_element(By.LINK_TEXT, "Sample dataset 4").click()
    self.driver.find_element(By.ID, "search").click()
    dropdown = self.driver.find_element(By.ID, "authors")
    time.sleep(1)
    dropdown.find_element(By.XPATH, "//option[. = 'Author 5']").click()
    time.sleep(1)
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.execute_script("window.scrollTo(0, document.body.scrollHeight)")
    time.sleep(1)
    self.driver.find_element(By.LINK_TEXT, "Sample dataset 5").click()
    self.driver.find_element(By.ID, "search").click()
    dropdown = self.driver.find_element(By.ID, "authors")
    time.sleep(1)
    dropdown.find_element(By.XPATH, "//option[. = 'Author 6']").click()
    time.sleep(1)
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.execute_script("window.scrollTo(0, document.body.scrollHeight)")
    time.sleep(1)
    self.driver.find_element(By.LINK_TEXT, "Sample dataset 6").click()
    self.driver.find_element(By.ID, "search").click()
    dropdown = self.driver.find_element(By.ID, "authors")
    time.sleep(1)
    dropdown.find_element(By.XPATH, "//option[. = 'Author 7']").click()
    time.sleep(1)
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "authors")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.ID, "clear-filters").click()
    element = self.driver.find_element(By.ID, "clear-filters")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
  
